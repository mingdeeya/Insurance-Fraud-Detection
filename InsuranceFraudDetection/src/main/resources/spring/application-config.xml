<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- jdbc.properties-> database 기반 플랫폼 및 아이디와 비번 -->
	<context:property-placeholder location="classpath:database/jdbc.properties"/>
	
	<!-- dataSource 빈 만들기  -->
	<bean id="o_dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- JdbcTemplate 빈 만들기 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="o_dataSource"/>
	</bean>
	
	<!-- mybatis session 빈 만들기 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="o_dataSource"/>
		<property name="mapperLocations" value="classpath:com/stack/ins/**/*.xml"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
		<constructor-arg index="1" value="SIMPLE"/>
	</bean>
	<!-- 트랜잭션 처리 빈 만들기  -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="o_dataSource"/>
	</bean>
	<tx:annotation-driven/>
	
	
	<!-- 마이바티스 mapper 어노테이션있는곳을 알아서 찾아준다. -->
<!-- 	<mybatis-spring:scan base-package="com/stack/ins/member/dao" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com/stack/ins/board/dao" factory-ref="sqlSessionFactory" /> -->
	
	
	<!--                                       마리아 DB 읜존성 주입  -->
	
	<bean id="m_dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
		<property name="url" value="jdbc:mariadb://127.0.0.1:3306/insurance_detection"/>
		<property name="username" value="root"/>
		<property name="password" value="admin"/>
	</bean>
	
	<!-- JdbcTemplate 빈 만들기 -->
	<bean id="m_jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="m_dataSource"/>
	</bean>
	
	<!-- mybatis session 빈 만들기 -->
	<bean id="m_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="m_dataSource"/>
		<property name="mapperLocations" value="classpath:com/stack/ins/**/*.xml"/>
	</bean>
	
	<bean id="m_sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="m_sqlSessionFactory"/>
		<constructor-arg index="1" value="SIMPLE"/>
	</bean>
	
	<!-- 마이바티스 mapper 어노테이션있는곳을 알아서 찾아준다. -->
<!-- 	<mybatis-spring:scan base-package="com/stack/ins/product/dao"/> -->
	
	
	
	<!-- 트랜잭션 처리 빈 만들기  -->
	
	<bean id="m_transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="m_dataSource"/>
	</bean>
	<tx:annotation-driven/>
	
	
	<!-- 예외처리 빈 만들기 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.RuntimeException">
					common/error
				</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="error/default"/>
	</bean>
	<!-- 마이바티스를 사용하기 위한 코드  어노테이션있는곳을 알아서 찾아준다.  -->
	
	<mybatis-spring:scan base-package="com.stack.ins.member.dao" factory-ref="sqlSessionFactory"/>
	<mybatis-spring:scan base-package="com.stack.ins.board.dao" factory-ref="sqlSessionFactory"/>
	<mybatis-spring:scan base-package="com.stack.ins.product.dao" factory-ref="m_sqlSessionFactory"/>
	<!-- 서비스 등록  -->
	<context:component-scan base-package="com.stack.ins.member.service"/>
	<context:component-scan base-package="com.stack.ins.board.service"/>
	<context:component-scan base-package="com.stack.ins.product.service"/>

	
	
</beans>
